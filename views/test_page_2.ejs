<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">

    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">

    <script type="text/javascript" src="/static/EventEmitter/EventEmitter.min.js"></script>
    <script type="text/javascript" src="/static/roslibjs/build/roslib.min.js"></script>
    <script type="text/javascript">

    // variables

      // ros
      const ros = new ROSLIB.Ros();

      // image tab
      const img = document.createElement("img");

    // odemetry dataType
      //global variable
      var twist = {
          linear : {x:0.0, y:0.0, z:0.0},
          angular : {x:0.0, y:0.0, z:0.0},
      };

      // topics
      const geometry_topic = new ROSLIB.Topic({
          ros : ros,
          name : '/cmd_vel',
          messageType : 'geometry_msgs/Twist',
      });
      const image_topic = new ROSLIB.Topic({
          ros : ros,
          name : '/rgb_cam/image_raw',
          messageType : 'sensor_msgs/msg/Image',
      });


      // events
      ros.on('connection', ()=> {
        console.log('ros2 connected.');
      });

      var decodeBase64 = function(s) {
        var e={},i,b=0,c,x,l=0,a,r='',w=String.fromCharCode,L=s.length;
        var A="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        for(i=0;i<64;i++){e[A.toString().charAt(i)]=i;}
        for(x=0;x<L;x++){
            c=e[s.toString().charAt(x)];b=(b<<6)+c;l+=6;
            while(l>=8){((a=(b>>>(l-=8))&0xff)||(x<(L-2)))&&(r+=w(a));}
        }
        return r;
    };

      // functions
      function test_connect(){

        console.log('test_connect called');

        // connect
        ros.connect('ws:127.0.0.1:9090');

        // image subscriber callback function
        image_topic.subscribe((imgMes)=>{

          console.log('get');/*
          const can = document.getElementById("canvas_camera");
          can.width = imgMes.width;
          can.height = imgMes.height;
          const ctx = can.getContext("2d");

          const imgData = ctx.createImageData(imgMes.width, imgMes.height);

          ctx.putImageData(imgData, 0, 0);
*/
        });

      }

      function publish_foward(){
        console.log('publish_foward called');
        twist.linear.x+=0.01;
        geometry_topic.publish(twist);
      }

    </script>
  </head>

  <body>

    <div>
      <canvas id="canvas_camera"></canvas>
    </div>
    <div>
      <button type="button" class="btn btn-primary" onclick="test_connect()">Connect</button>
    </div>
    
  </body>

</html>
